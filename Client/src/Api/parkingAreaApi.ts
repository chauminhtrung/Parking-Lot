import axios from "axios";

// âœ… Interface dá»±a trÃªn ParkingAreaResponse tá»« backend
export interface ParkingArea {
  areaId?: number;
  floorId: number;
  areaName: string;
  description?: string;
  spotCount: number;
  [key: string]: any;
}

const BASE_URL = "http://localhost:8080/api/areas"; // Ä‘á»•i port náº¿u cáº§n

const parkingAreaApi = {
  // ðŸŸ¢ Táº¡o khu vá»±c Ä‘á»— xe má»›i
  createParkingArea: async (data: ParkingArea) => (await axios.post(BASE_URL, data)).data,

  // ðŸ”µ Láº¥y danh sÃ¡ch táº¥t cáº£ khu vá»±c
  getAllParkingAreas: async () => (await axios.get<ParkingArea[]>(BASE_URL)).data,

  // ðŸŸ£ Láº¥y khu vá»±c theo ID
  getParkingAreaById: async (id: number) => (await axios.get<ParkingArea>(`${BASE_URL}/${id}`)).data,

  // ðŸŸ  Cáº­p nháº­t thÃ´ng tin khu vá»±c
  updateParkingArea: async (id: number, data: ParkingArea) =>
    (await axios.put(`${BASE_URL}/${id}`, data)).data,

  // ðŸ”´ XÃ³a khu vá»±c
  deleteParkingArea: async (id: number) => (await axios.delete(`${BASE_URL}/${id}`)).data,


 // ðŸŸ¢ Láº¥y danh sÃ¡ch khu vá»±c theo floorId
  getAreasByFloorId: async (floorId: number) =>
    (await axios.get<ParkingArea[]>(`${BASE_URL}/floor/${floorId}`)).data,


};

export default parkingAreaApi;
