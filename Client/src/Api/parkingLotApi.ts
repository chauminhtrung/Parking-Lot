import axios from "axios";

// âœ… Interface dá»±a theo ParkingLotResponse tá»« backend
export interface ParkingLot {
  lotId?: number;
  lotName: string;
  address: string;
  accountUsername?: string;
  [key: string]: any;
}

const BASE_URL = "http://localhost:8080/api/lots"; // Ä‘á»•i port náº¿u server báº¡n cháº¡y khÃ¡c

const parkingLotApi = {
  // ðŸ”µ Láº¥y táº¥t cáº£ bÃ£i Ä‘á»—
  getAllParkingLots: async () => (await axios.get<ParkingLot[]>(BASE_URL)).data,

  // ðŸŸ£ Láº¥y bÃ£i Ä‘á»— theo ID
  getParkingLotById: async (id: number) => (await axios.get<ParkingLot>(`${BASE_URL}/${id}`)).data,

  // ðŸŸ¢ Táº¡o má»›i bÃ£i Ä‘á»—
  createParkingLot: async (data: ParkingLot) => (await axios.post(BASE_URL, data)).data,

  // ðŸŸ  Cáº­p nháº­t bÃ£i Ä‘á»—
  updateParkingLot: async (id: number, data: ParkingLot) =>
    (await axios.put(`${BASE_URL}/${id}`, data)).data,

  // ðŸ”´ XÃ³a bÃ£i Ä‘á»—
  deleteParkingLot: async (id: number) => (await axios.delete(`${BASE_URL}/${id}`)).data,

  // ðŸŸ¡ Láº¥y bÃ£i Ä‘á»— theo Account ID
  getParkingLotByAccountId: async (accountId: number) =>
    (await axios.get<ParkingLot>(`${BASE_URL}/account/${accountId}`)).data,


};

export default parkingLotApi;
